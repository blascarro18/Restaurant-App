# Dependencias
FROM node:20-alpine as deps

WORKDIR /usr/src/app

RUN apk add --no-cache openssl libssl3

COPY package.json package-lock.json ./

RUN npm install --legacy-peer-deps

# Builder
FROM node:20-alpine as build

WORKDIR /usr/src/app

RUN apk add --no-cache openssl libssl3

ARG PORT  
ARG DATABASE_URL  
ARG RABBITMQ_URL

COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY . .

# Transpila TypeScript
RUN npm run build

# Instala dependencias de producci√≥n
RUN npm ci --only=production && npm cache clean --force

# Generar Prisma Client
RUN npx prisma generate

# Imagen final
FROM node:20-alpine as prod

WORKDIR /usr/src/app

RUN apk add --no-cache openssl libssl3

COPY --from=build /usr/src/app/node_modules ./node_modules
COPY --from=build /usr/src/app/dist ./dist
COPY --from=build /usr/src/app/prisma ./prisma
COPY --from=build /usr/src/app/package.json ./package.json

# Copiar el archivo .env
COPY .env .env

ARG PORT  
ARG DATABASE_URL  
ARG RABBITMQ_URL

ENV NODE_ENV=production  
ENV PORT=${PORT}  
ENV DATABASE_URL=${DATABASE_URL}  
ENV RABBITMQ_URL=${RABBITMQ_URL}

RUN chown -R node:node /usr/src/app

USER node

# Ejecuta migraciones y la app
CMD [ "sh", "-c", "npx prisma migrate deploy && npm start" ]
